## Software

### Introduction

τ‑ARGUS (Hunderpool et al, 2005) is a software package which provides tools to protect tables against the risk of statistical disclosure (τ‑ARGUS is also discussed in Chapter 4). Controlled rounding is easy to use in τ‑ARGUS and the controlled rounding procedure (CRP) was developed by JJ Salazar. This procedure is based on optimisation techniques similar to the procedure developed for cell suppression. The CRP yields additive rounded tables, where the rounded values add up to the rounded totals and sub-totals shown in the table. This means realistic tables are produced and it makes it impossible to reduce the protection by "unpicking" the original values by exploiting the differences in the sums of the rounded values. The CRP implemented in τ‑ARGUS also allows the specification of hierarchical structures within the table variables.

Controlled rounding gives sufficient protection to small frequencies and creates uncertainty about the zero values (*i.e.* empty cells). (This is not the case for suppression in terms of how it is now implemented in τ‑ARGUS).

In Zero-restricted Controlled Rounding cell counts are left unchanged if they are multiples of the rounding base or shifted to one of the adjacent multiples of the rounding base. The modified values are chosen so that the sum of the absolute differences between the original values and the rounded ones are minimized (under an additivity constraint). Therefore, some values will be rounded up or down to the most distant multiple of the base in order to help satisfy these constraints. In most cases a solution can be found, but in some cases it cannot and the zero-restriction constraint in CRP can be relaxed to allow the cell values to be rounded to a nonadjacent multiple of the base. This relaxation is controlled by allowing the procedure to take a maximum number of *steps*.

For example, consider rounding a cell value of 7 when the rounding base equals 5. In zero-restricted rounding, the solution can be either 5 or 10. If 1 step is allowed, the solution can be 0, 5, 10 or 15. In general, let $z$ be the integer to be rounded in base $b$, then this number can be written as

$z = u b + r$,

where $ub$ is the lower adjacent multiple of $b$ (hence $u$ is the floor value of $z/b$) and $r$ is the remainder. In the zero-restricted solution the rounded value, $a$, can take values:

$$
\begin{align}
a = \begin{cases}
ub &\text{if}\quad r=0 \\
(u+1)b &\text{if}\quad r\neq0
\end{cases}
\end{align}
$$

If $K$ steps are allowed, then $a$, can take values:


$$
\begin{align}
a = \begin{cases}
\max_{j\in{-K,\ldots,K}}(0,(u+j))\cdot b   &\text{if}\quad r=0\\
\max_{j\in{-K,\ldots,K+1}}(0,(u+j))\cdot b &\text{if}\quad r\neq0
\end{cases}
\end{align}
$$


$\left\{ \begin{array} { l } a = \max \{ 0 , ( u + j ) \} b , j = - K , \ldots , K , \text { if } r = 0 \\ a = \max \{ 0 , ( u + j ) \} b , j = - K , \ldots , ( K + 1 ) , \text { if } r \neq 0 \end{array} \right.$)

### Optimal, first feasible and RAPID solutions

For a given table there can exist more than one controlled rounded solution, and any of these solutions is a *feasible* solution. The Controlled Rounding Program embedded in τ‑ARGUS determines the *optimal* solution by minimising the sum of the absolute distances of the rounded values, from the original ones. Denoting the cell values, including the totals and sub-totals, with *z*~i~ and the corresponding rounded values with *a*~i~, the function that is minimised is

$$
\sum\limits_{i = 1}^{N} \left| z_{i}-a_{i} \right| \quad ,
$$

where $N$ is the number of cells in a table (including the marginal ones). The optimisation procedure for controlled rounding is a rather complex one (*NP*-complete program), so finding the optimal solution may take a long time for large tables. In fact, the algorithm iteratively builds different rounded tables until it finds the optimal solution. In order to limit the time required to obtain a solution, the algorithm can be stopped when the first feasible solution is found. In many cases, this solution is quite close to the optimal one and it can be found in significantly less time.

The RAPID solution is produced by CRP as an approximated solution when a feasible one cannot be found. This solution is obtained by rounding the internal cells to the closest multiple of the base and then computing the marginal cells by addition. This means that the computed marginal values can be many jumps away from the original value. However, a RAPID solution is produced at each iteration of the search for an optimal solution, and it will improve (in terms of the loss function) over time. τ‑ARGUS allows the user to stop CRP after the first RAPID solution is produced, but this is likely to be very far away from the optimal one.

### Protection provided by controlled rounding

The protection provided by controlled rounding can be assessed by considering the uncertainty (about the true values achieved) when releasing rounded values; that is the existence interval that an intruder can compute for a rounded value. We assume that the values of the rounding base, $b$, and the number of steps allowed, $K$, are known by the user together with the output rounded table. Furthermore, we assume that it is known that the original values are positive frequencies (hence nonnegative integers).

**Zero-restricted rounding.**  

Given a rounded value, *a*, an intruder can compute the following existence intervals for the true value, *z*:

$$
\begin{align}
z \in \begin{cases}
[0,b-1]       &\text{if} \quad a = 0 \\
[a-b+1,a+b-1] &\text{if} \quad a \neq 0
\end{cases}
\end{align}
$$

For example, if the rounding base is $b=5$ and the rounded value is $a=0$, a user can determine that the original value is between $0$ and $4$. If the rounded value is not $0$, then users can determine that the true value is between $\pm 4$ units from the published value.

**K-step rounding**
As mentioned above, it is assumed that the number of steps allowed is released together with the rounded table. Let $K$* be the number of steps allowed, then an intruder can compute the following existence intervals for the true value $z$:

$$
\begin{align}
z \in \begin{cases}
[0,(K+1)b-1]            &\text{if} \quad a < (K+1)b \\
[a-(K+1)b+1,a+(K+1)b-1] &\text{if} \quad a \geq (K+1)b
\end{cases}
\end{align}
$$


For example, assume that for controlled rounding with $b=5$ and $K=1$, $a=15$, then a user can determine that $z \in [ 6,24 ]$.

**Very large tables**
The procedure implemented in τ‑ARGUS is capable of rounding tables up to 150K cells on an average computer. However for larger tables a partitioning procedure is available, which allows much larger tables to be rounded. Tables with over six million cells have been successfully rounded this way.

